This SCO is used for testing basic asynchronous operation using JavaScript Promises and then constructs.

Corticon.js DOES NOT SUPPORT this pattern.  When you need to do asynchronous operations use the await
pattern as illustrated in https://github.com/corticon/corticon.js-samples/tree/master/ServiceCallOut/BasicAsyncOperation

This sample is provided as an illustration of what NOT TO DO.

The SCO asynchronously gets some data (like a typical I/O operation would) and updates
the attribute message.

The sample contains 2 rulesheets.

The first one runs before the call to the SCO and asserts the value of the attribute message.
The second one runs after the SCO has completed and asserts the message attribute has been
updated correctly.
